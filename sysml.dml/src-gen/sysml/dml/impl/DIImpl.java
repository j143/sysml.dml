/**
 * generated by Xtext 2.9.0
 */
package sysml.dml.impl;

import org.eclipse.emf.common.notify.Notification;
import org.eclipse.emf.common.notify.NotificationChain;

import org.eclipse.emf.ecore.EClass;
import org.eclipse.emf.ecore.InternalEObject;

import org.eclipse.emf.ecore.impl.ENotificationImpl;
import org.eclipse.emf.ecore.impl.MinimalEObjectImpl;

import sysml.dml.DI;
import sysml.dml.DmlPackage;
import sysml.dml.ID;
import sysml.dml.IS;

/**
 * <!-- begin-user-doc -->
 * An implementation of the model object '<em><b>DI</b></em>'.
 * <!-- end-user-doc -->
 * <p>
 * The following features are implemented:
 * </p>
 * <ul>
 *   <li>{@link sysml.dml.impl.DIImpl#getId <em>Id</em>}</li>
 *   <li>{@link sysml.dml.impl.DIImpl#getB <em>B</em>}</li>
 *   <li>{@link sysml.dml.impl.DIImpl#getE <em>E</em>}</li>
 *   <li>{@link sysml.dml.impl.DIImpl#getClid <em>Clid</em>}</li>
 *   <li>{@link sysml.dml.impl.DIImpl#getCln <em>Cln</em>}</li>
 * </ul>
 *
 * @generated
 */
public class DIImpl extends MinimalEObjectImpl.Container implements DI
{
  /**
   * The cached value of the '{@link #getId() <em>Id</em>}' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getId()
   * @generated
   * @ordered
   */
  protected ID id;

  /**
   * The cached value of the '{@link #getB() <em>B</em>}' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getB()
   * @generated
   * @ordered
   */
  protected IS b;

  /**
   * The cached value of the '{@link #getE() <em>E</em>}' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getE()
   * @generated
   * @ordered
   */
  protected IS e;

  /**
   * The default value of the '{@link #getClid() <em>Clid</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getClid()
   * @generated
   * @ordered
   */
  protected static final String CLID_EDEFAULT = null;

  /**
   * The cached value of the '{@link #getClid() <em>Clid</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getClid()
   * @generated
   * @ordered
   */
  protected String clid = CLID_EDEFAULT;

  /**
   * The default value of the '{@link #getCln() <em>Cln</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getCln()
   * @generated
   * @ordered
   */
  protected static final String CLN_EDEFAULT = null;

  /**
   * The cached value of the '{@link #getCln() <em>Cln</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getCln()
   * @generated
   * @ordered
   */
  protected String cln = CLN_EDEFAULT;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  protected DIImpl()
  {
    super();
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  protected EClass eStaticClass()
  {
    return DmlPackage.Literals.DI;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public ID getId()
  {
    return id;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public NotificationChain basicSetId(ID newId, NotificationChain msgs)
  {
    ID oldId = id;
    id = newId;
    if (eNotificationRequired())
    {
      ENotificationImpl notification = new ENotificationImpl(this, Notification.SET, DmlPackage.DI__ID, oldId, newId);
      if (msgs == null) msgs = notification; else msgs.add(notification);
    }
    return msgs;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public void setId(ID newId)
  {
    if (newId != id)
    {
      NotificationChain msgs = null;
      if (id != null)
        msgs = ((InternalEObject)id).eInverseRemove(this, EOPPOSITE_FEATURE_BASE - DmlPackage.DI__ID, null, msgs);
      if (newId != null)
        msgs = ((InternalEObject)newId).eInverseAdd(this, EOPPOSITE_FEATURE_BASE - DmlPackage.DI__ID, null, msgs);
      msgs = basicSetId(newId, msgs);
      if (msgs != null) msgs.dispatch();
    }
    else if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, DmlPackage.DI__ID, newId, newId));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public IS getB()
  {
    return b;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public NotificationChain basicSetB(IS newB, NotificationChain msgs)
  {
    IS oldB = b;
    b = newB;
    if (eNotificationRequired())
    {
      ENotificationImpl notification = new ENotificationImpl(this, Notification.SET, DmlPackage.DI__B, oldB, newB);
      if (msgs == null) msgs = notification; else msgs.add(notification);
    }
    return msgs;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public void setB(IS newB)
  {
    if (newB != b)
    {
      NotificationChain msgs = null;
      if (b != null)
        msgs = ((InternalEObject)b).eInverseRemove(this, EOPPOSITE_FEATURE_BASE - DmlPackage.DI__B, null, msgs);
      if (newB != null)
        msgs = ((InternalEObject)newB).eInverseAdd(this, EOPPOSITE_FEATURE_BASE - DmlPackage.DI__B, null, msgs);
      msgs = basicSetB(newB, msgs);
      if (msgs != null) msgs.dispatch();
    }
    else if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, DmlPackage.DI__B, newB, newB));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public IS getE()
  {
    return e;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public NotificationChain basicSetE(IS newE, NotificationChain msgs)
  {
    IS oldE = e;
    e = newE;
    if (eNotificationRequired())
    {
      ENotificationImpl notification = new ENotificationImpl(this, Notification.SET, DmlPackage.DI__E, oldE, newE);
      if (msgs == null) msgs = notification; else msgs.add(notification);
    }
    return msgs;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public void setE(IS newE)
  {
    if (newE != e)
    {
      NotificationChain msgs = null;
      if (e != null)
        msgs = ((InternalEObject)e).eInverseRemove(this, EOPPOSITE_FEATURE_BASE - DmlPackage.DI__E, null, msgs);
      if (newE != null)
        msgs = ((InternalEObject)newE).eInverseAdd(this, EOPPOSITE_FEATURE_BASE - DmlPackage.DI__E, null, msgs);
      msgs = basicSetE(newE, msgs);
      if (msgs != null) msgs.dispatch();
    }
    else if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, DmlPackage.DI__E, newE, newE));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public String getClid()
  {
    return clid;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public void setClid(String newClid)
  {
    String oldClid = clid;
    clid = newClid;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, DmlPackage.DI__CLID, oldClid, clid));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public String getCln()
  {
    return cln;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public void setCln(String newCln)
  {
    String oldCln = cln;
    cln = newCln;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, DmlPackage.DI__CLN, oldCln, cln));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public NotificationChain eInverseRemove(InternalEObject otherEnd, int featureID, NotificationChain msgs)
  {
    switch (featureID)
    {
      case DmlPackage.DI__ID:
        return basicSetId(null, msgs);
      case DmlPackage.DI__B:
        return basicSetB(null, msgs);
      case DmlPackage.DI__E:
        return basicSetE(null, msgs);
    }
    return super.eInverseRemove(otherEnd, featureID, msgs);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Object eGet(int featureID, boolean resolve, boolean coreType)
  {
    switch (featureID)
    {
      case DmlPackage.DI__ID:
        return getId();
      case DmlPackage.DI__B:
        return getB();
      case DmlPackage.DI__E:
        return getE();
      case DmlPackage.DI__CLID:
        return getClid();
      case DmlPackage.DI__CLN:
        return getCln();
    }
    return super.eGet(featureID, resolve, coreType);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void eSet(int featureID, Object newValue)
  {
    switch (featureID)
    {
      case DmlPackage.DI__ID:
        setId((ID)newValue);
        return;
      case DmlPackage.DI__B:
        setB((IS)newValue);
        return;
      case DmlPackage.DI__E:
        setE((IS)newValue);
        return;
      case DmlPackage.DI__CLID:
        setClid((String)newValue);
        return;
      case DmlPackage.DI__CLN:
        setCln((String)newValue);
        return;
    }
    super.eSet(featureID, newValue);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void eUnset(int featureID)
  {
    switch (featureID)
    {
      case DmlPackage.DI__ID:
        setId((ID)null);
        return;
      case DmlPackage.DI__B:
        setB((IS)null);
        return;
      case DmlPackage.DI__E:
        setE((IS)null);
        return;
      case DmlPackage.DI__CLID:
        setClid(CLID_EDEFAULT);
        return;
      case DmlPackage.DI__CLN:
        setCln(CLN_EDEFAULT);
        return;
    }
    super.eUnset(featureID);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public boolean eIsSet(int featureID)
  {
    switch (featureID)
    {
      case DmlPackage.DI__ID:
        return id != null;
      case DmlPackage.DI__B:
        return b != null;
      case DmlPackage.DI__E:
        return e != null;
      case DmlPackage.DI__CLID:
        return CLID_EDEFAULT == null ? clid != null : !CLID_EDEFAULT.equals(clid);
      case DmlPackage.DI__CLN:
        return CLN_EDEFAULT == null ? cln != null : !CLN_EDEFAULT.equals(cln);
    }
    return super.eIsSet(featureID);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public String toString()
  {
    if (eIsProxy()) return super.toString();

    StringBuffer result = new StringBuffer(super.toString());
    result.append(" (clid: ");
    result.append(clid);
    result.append(", cln: ");
    result.append(cln);
    result.append(')');
    return result.toString();
  }

} //DIImpl
