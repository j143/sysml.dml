/**
 * generated by Xtext 2.9.0
 */
package sysml.dml.impl;

import java.util.Collection;

import org.eclipse.emf.common.notify.Notification;
import org.eclipse.emf.common.notify.NotificationChain;

import org.eclipse.emf.common.util.EList;

import org.eclipse.emf.ecore.EClass;
import org.eclipse.emf.ecore.InternalEObject;

import org.eclipse.emf.ecore.impl.ENotificationImpl;
import org.eclipse.emf.ecore.impl.MinimalEObjectImpl;

import org.eclipse.emf.ecore.util.EObjectContainmentEList;
import org.eclipse.emf.ecore.util.InternalEList;

import sysml.dml.BS;
import sysml.dml.DI;
import sysml.dml.DmlPackage;
import sysml.dml.E;
import sysml.dml.FC;
import sysml.dml.FP;
import sysml.dml.ID;
import sysml.dml.PARFORPARAMS;
import sysml.dml.S;

/**
 * <!-- begin-user-doc -->
 * An implementation of the model object '<em><b>S</b></em>'.
 * <!-- end-user-doc -->
 * <p>
 * The following features are implemented:
 * </p>
 * <ul>
 *   <li>{@link sysml.dml.impl.SImpl#getSrc <em>Src</em>}</li>
 *   <li>{@link sysml.dml.impl.SImpl#getSrcid <em>Srcid</em>}</li>
 *   <li>{@link sysml.dml.impl.SImpl#getCwd <em>Cwd</em>}</li>
 *   <li>{@link sysml.dml.impl.SImpl#getIfe <em>Ife</em>}</li>
 *   <li>{@link sysml.dml.impl.SImpl#getIs <em>Is</em>}</li>
 *   <li>{@link sysml.dml.impl.SImpl#getEs <em>Es</em>}</li>
 *   <li>{@link sysml.dml.impl.SImpl#getFp <em>Fp</em>}</li>
 *   <li>{@link sysml.dml.impl.SImpl#getP <em>P</em>}</li>
 *   <li>{@link sysml.dml.impl.SImpl#getS <em>S</em>}</li>
 *   <li>{@link sysml.dml.impl.SImpl#getPf <em>Pf</em>}</li>
 *   <li>{@link sysml.dml.impl.SImpl#getWe <em>We</em>}</li>
 *   <li>{@link sysml.dml.impl.SImpl#getDi <em>Di</em>}</li>
 *   <li>{@link sysml.dml.impl.SImpl#getFc <em>Fc</em>}</li>
 *   <li>{@link sysml.dml.impl.SImpl#getLhsdi <em>Lhsdi</em>}</li>
 *   <li>{@link sysml.dml.impl.SImpl#getE <em>E</em>}</li>
 * </ul>
 *
 * @generated
 */
public class SImpl extends MinimalEObjectImpl.Container implements S
{
  /**
   * The default value of the '{@link #getSrc() <em>Src</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getSrc()
   * @generated
   * @ordered
   */
  protected static final String SRC_EDEFAULT = null;

  /**
   * The cached value of the '{@link #getSrc() <em>Src</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getSrc()
   * @generated
   * @ordered
   */
  protected String src = SRC_EDEFAULT;

  /**
   * The cached value of the '{@link #getSrcid() <em>Srcid</em>}' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getSrcid()
   * @generated
   * @ordered
   */
  protected ID srcid;

  /**
   * The default value of the '{@link #getCwd() <em>Cwd</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getCwd()
   * @generated
   * @ordered
   */
  protected static final String CWD_EDEFAULT = null;

  /**
   * The cached value of the '{@link #getCwd() <em>Cwd</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getCwd()
   * @generated
   * @ordered
   */
  protected String cwd = CWD_EDEFAULT;

  /**
   * The cached value of the '{@link #getIfe() <em>Ife</em>}' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getIfe()
   * @generated
   * @ordered
   */
  protected E ife;

  /**
   * The cached value of the '{@link #getIs() <em>Is</em>}' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getIs()
   * @generated
   * @ordered
   */
  protected BS is;

  /**
   * The cached value of the '{@link #getEs() <em>Es</em>}' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getEs()
   * @generated
   * @ordered
   */
  protected BS es;

  /**
   * The cached value of the '{@link #getFp() <em>Fp</em>}' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getFp()
   * @generated
   * @ordered
   */
  protected FP fp;

  /**
   * The cached value of the '{@link #getP() <em>P</em>}' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getP()
   * @generated
   * @ordered
   */
  protected PARFORPARAMS p;

  /**
   * The cached value of the '{@link #getS() <em>S</em>}' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getS()
   * @generated
   * @ordered
   */
  protected BS s;

  /**
   * The cached value of the '{@link #getPf() <em>Pf</em>}' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getPf()
   * @generated
   * @ordered
   */
  protected FP pf;

  /**
   * The cached value of the '{@link #getWe() <em>We</em>}' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getWe()
   * @generated
   * @ordered
   */
  protected E we;

  /**
   * The cached value of the '{@link #getDi() <em>Di</em>}' containment reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getDi()
   * @generated
   * @ordered
   */
  protected EList<DI> di;

  /**
   * The cached value of the '{@link #getFc() <em>Fc</em>}' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getFc()
   * @generated
   * @ordered
   */
  protected FC fc;

  /**
   * The cached value of the '{@link #getLhsdi() <em>Lhsdi</em>}' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getLhsdi()
   * @generated
   * @ordered
   */
  protected DI lhsdi;

  /**
   * The cached value of the '{@link #getE() <em>E</em>}' containment reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getE()
   * @generated
   * @ordered
   */
  protected EList<E> e;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  protected SImpl()
  {
    super();
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  protected EClass eStaticClass()
  {
    return DmlPackage.Literals.S;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public String getSrc()
  {
    return src;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public void setSrc(String newSrc)
  {
    String oldSrc = src;
    src = newSrc;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, DmlPackage.S__SRC, oldSrc, src));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public ID getSrcid()
  {
    return srcid;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public NotificationChain basicSetSrcid(ID newSrcid, NotificationChain msgs)
  {
    ID oldSrcid = srcid;
    srcid = newSrcid;
    if (eNotificationRequired())
    {
      ENotificationImpl notification = new ENotificationImpl(this, Notification.SET, DmlPackage.S__SRCID, oldSrcid, newSrcid);
      if (msgs == null) msgs = notification; else msgs.add(notification);
    }
    return msgs;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public void setSrcid(ID newSrcid)
  {
    if (newSrcid != srcid)
    {
      NotificationChain msgs = null;
      if (srcid != null)
        msgs = ((InternalEObject)srcid).eInverseRemove(this, EOPPOSITE_FEATURE_BASE - DmlPackage.S__SRCID, null, msgs);
      if (newSrcid != null)
        msgs = ((InternalEObject)newSrcid).eInverseAdd(this, EOPPOSITE_FEATURE_BASE - DmlPackage.S__SRCID, null, msgs);
      msgs = basicSetSrcid(newSrcid, msgs);
      if (msgs != null) msgs.dispatch();
    }
    else if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, DmlPackage.S__SRCID, newSrcid, newSrcid));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public String getCwd()
  {
    return cwd;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public void setCwd(String newCwd)
  {
    String oldCwd = cwd;
    cwd = newCwd;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, DmlPackage.S__CWD, oldCwd, cwd));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public E getIfe()
  {
    return ife;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public NotificationChain basicSetIfe(E newIfe, NotificationChain msgs)
  {
    E oldIfe = ife;
    ife = newIfe;
    if (eNotificationRequired())
    {
      ENotificationImpl notification = new ENotificationImpl(this, Notification.SET, DmlPackage.S__IFE, oldIfe, newIfe);
      if (msgs == null) msgs = notification; else msgs.add(notification);
    }
    return msgs;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public void setIfe(E newIfe)
  {
    if (newIfe != ife)
    {
      NotificationChain msgs = null;
      if (ife != null)
        msgs = ((InternalEObject)ife).eInverseRemove(this, EOPPOSITE_FEATURE_BASE - DmlPackage.S__IFE, null, msgs);
      if (newIfe != null)
        msgs = ((InternalEObject)newIfe).eInverseAdd(this, EOPPOSITE_FEATURE_BASE - DmlPackage.S__IFE, null, msgs);
      msgs = basicSetIfe(newIfe, msgs);
      if (msgs != null) msgs.dispatch();
    }
    else if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, DmlPackage.S__IFE, newIfe, newIfe));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public BS getIs()
  {
    return is;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public NotificationChain basicSetIs(BS newIs, NotificationChain msgs)
  {
    BS oldIs = is;
    is = newIs;
    if (eNotificationRequired())
    {
      ENotificationImpl notification = new ENotificationImpl(this, Notification.SET, DmlPackage.S__IS, oldIs, newIs);
      if (msgs == null) msgs = notification; else msgs.add(notification);
    }
    return msgs;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public void setIs(BS newIs)
  {
    if (newIs != is)
    {
      NotificationChain msgs = null;
      if (is != null)
        msgs = ((InternalEObject)is).eInverseRemove(this, EOPPOSITE_FEATURE_BASE - DmlPackage.S__IS, null, msgs);
      if (newIs != null)
        msgs = ((InternalEObject)newIs).eInverseAdd(this, EOPPOSITE_FEATURE_BASE - DmlPackage.S__IS, null, msgs);
      msgs = basicSetIs(newIs, msgs);
      if (msgs != null) msgs.dispatch();
    }
    else if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, DmlPackage.S__IS, newIs, newIs));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public BS getEs()
  {
    return es;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public NotificationChain basicSetEs(BS newEs, NotificationChain msgs)
  {
    BS oldEs = es;
    es = newEs;
    if (eNotificationRequired())
    {
      ENotificationImpl notification = new ENotificationImpl(this, Notification.SET, DmlPackage.S__ES, oldEs, newEs);
      if (msgs == null) msgs = notification; else msgs.add(notification);
    }
    return msgs;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public void setEs(BS newEs)
  {
    if (newEs != es)
    {
      NotificationChain msgs = null;
      if (es != null)
        msgs = ((InternalEObject)es).eInverseRemove(this, EOPPOSITE_FEATURE_BASE - DmlPackage.S__ES, null, msgs);
      if (newEs != null)
        msgs = ((InternalEObject)newEs).eInverseAdd(this, EOPPOSITE_FEATURE_BASE - DmlPackage.S__ES, null, msgs);
      msgs = basicSetEs(newEs, msgs);
      if (msgs != null) msgs.dispatch();
    }
    else if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, DmlPackage.S__ES, newEs, newEs));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public FP getFp()
  {
    return fp;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public NotificationChain basicSetFp(FP newFp, NotificationChain msgs)
  {
    FP oldFp = fp;
    fp = newFp;
    if (eNotificationRequired())
    {
      ENotificationImpl notification = new ENotificationImpl(this, Notification.SET, DmlPackage.S__FP, oldFp, newFp);
      if (msgs == null) msgs = notification; else msgs.add(notification);
    }
    return msgs;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public void setFp(FP newFp)
  {
    if (newFp != fp)
    {
      NotificationChain msgs = null;
      if (fp != null)
        msgs = ((InternalEObject)fp).eInverseRemove(this, EOPPOSITE_FEATURE_BASE - DmlPackage.S__FP, null, msgs);
      if (newFp != null)
        msgs = ((InternalEObject)newFp).eInverseAdd(this, EOPPOSITE_FEATURE_BASE - DmlPackage.S__FP, null, msgs);
      msgs = basicSetFp(newFp, msgs);
      if (msgs != null) msgs.dispatch();
    }
    else if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, DmlPackage.S__FP, newFp, newFp));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public PARFORPARAMS getP()
  {
    return p;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public NotificationChain basicSetP(PARFORPARAMS newP, NotificationChain msgs)
  {
    PARFORPARAMS oldP = p;
    p = newP;
    if (eNotificationRequired())
    {
      ENotificationImpl notification = new ENotificationImpl(this, Notification.SET, DmlPackage.S__P, oldP, newP);
      if (msgs == null) msgs = notification; else msgs.add(notification);
    }
    return msgs;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public void setP(PARFORPARAMS newP)
  {
    if (newP != p)
    {
      NotificationChain msgs = null;
      if (p != null)
        msgs = ((InternalEObject)p).eInverseRemove(this, EOPPOSITE_FEATURE_BASE - DmlPackage.S__P, null, msgs);
      if (newP != null)
        msgs = ((InternalEObject)newP).eInverseAdd(this, EOPPOSITE_FEATURE_BASE - DmlPackage.S__P, null, msgs);
      msgs = basicSetP(newP, msgs);
      if (msgs != null) msgs.dispatch();
    }
    else if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, DmlPackage.S__P, newP, newP));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public BS getS()
  {
    return s;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public NotificationChain basicSetS(BS newS, NotificationChain msgs)
  {
    BS oldS = s;
    s = newS;
    if (eNotificationRequired())
    {
      ENotificationImpl notification = new ENotificationImpl(this, Notification.SET, DmlPackage.S__S, oldS, newS);
      if (msgs == null) msgs = notification; else msgs.add(notification);
    }
    return msgs;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public void setS(BS newS)
  {
    if (newS != s)
    {
      NotificationChain msgs = null;
      if (s != null)
        msgs = ((InternalEObject)s).eInverseRemove(this, EOPPOSITE_FEATURE_BASE - DmlPackage.S__S, null, msgs);
      if (newS != null)
        msgs = ((InternalEObject)newS).eInverseAdd(this, EOPPOSITE_FEATURE_BASE - DmlPackage.S__S, null, msgs);
      msgs = basicSetS(newS, msgs);
      if (msgs != null) msgs.dispatch();
    }
    else if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, DmlPackage.S__S, newS, newS));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public FP getPf()
  {
    return pf;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public NotificationChain basicSetPf(FP newPf, NotificationChain msgs)
  {
    FP oldPf = pf;
    pf = newPf;
    if (eNotificationRequired())
    {
      ENotificationImpl notification = new ENotificationImpl(this, Notification.SET, DmlPackage.S__PF, oldPf, newPf);
      if (msgs == null) msgs = notification; else msgs.add(notification);
    }
    return msgs;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public void setPf(FP newPf)
  {
    if (newPf != pf)
    {
      NotificationChain msgs = null;
      if (pf != null)
        msgs = ((InternalEObject)pf).eInverseRemove(this, EOPPOSITE_FEATURE_BASE - DmlPackage.S__PF, null, msgs);
      if (newPf != null)
        msgs = ((InternalEObject)newPf).eInverseAdd(this, EOPPOSITE_FEATURE_BASE - DmlPackage.S__PF, null, msgs);
      msgs = basicSetPf(newPf, msgs);
      if (msgs != null) msgs.dispatch();
    }
    else if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, DmlPackage.S__PF, newPf, newPf));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public E getWe()
  {
    return we;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public NotificationChain basicSetWe(E newWe, NotificationChain msgs)
  {
    E oldWe = we;
    we = newWe;
    if (eNotificationRequired())
    {
      ENotificationImpl notification = new ENotificationImpl(this, Notification.SET, DmlPackage.S__WE, oldWe, newWe);
      if (msgs == null) msgs = notification; else msgs.add(notification);
    }
    return msgs;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public void setWe(E newWe)
  {
    if (newWe != we)
    {
      NotificationChain msgs = null;
      if (we != null)
        msgs = ((InternalEObject)we).eInverseRemove(this, EOPPOSITE_FEATURE_BASE - DmlPackage.S__WE, null, msgs);
      if (newWe != null)
        msgs = ((InternalEObject)newWe).eInverseAdd(this, EOPPOSITE_FEATURE_BASE - DmlPackage.S__WE, null, msgs);
      msgs = basicSetWe(newWe, msgs);
      if (msgs != null) msgs.dispatch();
    }
    else if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, DmlPackage.S__WE, newWe, newWe));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EList<DI> getDi()
  {
    if (di == null)
    {
      di = new EObjectContainmentEList<DI>(DI.class, this, DmlPackage.S__DI);
    }
    return di;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public FC getFc()
  {
    return fc;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public NotificationChain basicSetFc(FC newFc, NotificationChain msgs)
  {
    FC oldFc = fc;
    fc = newFc;
    if (eNotificationRequired())
    {
      ENotificationImpl notification = new ENotificationImpl(this, Notification.SET, DmlPackage.S__FC, oldFc, newFc);
      if (msgs == null) msgs = notification; else msgs.add(notification);
    }
    return msgs;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public void setFc(FC newFc)
  {
    if (newFc != fc)
    {
      NotificationChain msgs = null;
      if (fc != null)
        msgs = ((InternalEObject)fc).eInverseRemove(this, EOPPOSITE_FEATURE_BASE - DmlPackage.S__FC, null, msgs);
      if (newFc != null)
        msgs = ((InternalEObject)newFc).eInverseAdd(this, EOPPOSITE_FEATURE_BASE - DmlPackage.S__FC, null, msgs);
      msgs = basicSetFc(newFc, msgs);
      if (msgs != null) msgs.dispatch();
    }
    else if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, DmlPackage.S__FC, newFc, newFc));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public DI getLhsdi()
  {
    return lhsdi;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public NotificationChain basicSetLhsdi(DI newLhsdi, NotificationChain msgs)
  {
    DI oldLhsdi = lhsdi;
    lhsdi = newLhsdi;
    if (eNotificationRequired())
    {
      ENotificationImpl notification = new ENotificationImpl(this, Notification.SET, DmlPackage.S__LHSDI, oldLhsdi, newLhsdi);
      if (msgs == null) msgs = notification; else msgs.add(notification);
    }
    return msgs;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public void setLhsdi(DI newLhsdi)
  {
    if (newLhsdi != lhsdi)
    {
      NotificationChain msgs = null;
      if (lhsdi != null)
        msgs = ((InternalEObject)lhsdi).eInverseRemove(this, EOPPOSITE_FEATURE_BASE - DmlPackage.S__LHSDI, null, msgs);
      if (newLhsdi != null)
        msgs = ((InternalEObject)newLhsdi).eInverseAdd(this, EOPPOSITE_FEATURE_BASE - DmlPackage.S__LHSDI, null, msgs);
      msgs = basicSetLhsdi(newLhsdi, msgs);
      if (msgs != null) msgs.dispatch();
    }
    else if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, DmlPackage.S__LHSDI, newLhsdi, newLhsdi));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EList<E> getE()
  {
    if (e == null)
    {
      e = new EObjectContainmentEList<E>(E.class, this, DmlPackage.S__E);
    }
    return e;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public NotificationChain eInverseRemove(InternalEObject otherEnd, int featureID, NotificationChain msgs)
  {
    switch (featureID)
    {
      case DmlPackage.S__SRCID:
        return basicSetSrcid(null, msgs);
      case DmlPackage.S__IFE:
        return basicSetIfe(null, msgs);
      case DmlPackage.S__IS:
        return basicSetIs(null, msgs);
      case DmlPackage.S__ES:
        return basicSetEs(null, msgs);
      case DmlPackage.S__FP:
        return basicSetFp(null, msgs);
      case DmlPackage.S__P:
        return basicSetP(null, msgs);
      case DmlPackage.S__S:
        return basicSetS(null, msgs);
      case DmlPackage.S__PF:
        return basicSetPf(null, msgs);
      case DmlPackage.S__WE:
        return basicSetWe(null, msgs);
      case DmlPackage.S__DI:
        return ((InternalEList<?>)getDi()).basicRemove(otherEnd, msgs);
      case DmlPackage.S__FC:
        return basicSetFc(null, msgs);
      case DmlPackage.S__LHSDI:
        return basicSetLhsdi(null, msgs);
      case DmlPackage.S__E:
        return ((InternalEList<?>)getE()).basicRemove(otherEnd, msgs);
    }
    return super.eInverseRemove(otherEnd, featureID, msgs);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Object eGet(int featureID, boolean resolve, boolean coreType)
  {
    switch (featureID)
    {
      case DmlPackage.S__SRC:
        return getSrc();
      case DmlPackage.S__SRCID:
        return getSrcid();
      case DmlPackage.S__CWD:
        return getCwd();
      case DmlPackage.S__IFE:
        return getIfe();
      case DmlPackage.S__IS:
        return getIs();
      case DmlPackage.S__ES:
        return getEs();
      case DmlPackage.S__FP:
        return getFp();
      case DmlPackage.S__P:
        return getP();
      case DmlPackage.S__S:
        return getS();
      case DmlPackage.S__PF:
        return getPf();
      case DmlPackage.S__WE:
        return getWe();
      case DmlPackage.S__DI:
        return getDi();
      case DmlPackage.S__FC:
        return getFc();
      case DmlPackage.S__LHSDI:
        return getLhsdi();
      case DmlPackage.S__E:
        return getE();
    }
    return super.eGet(featureID, resolve, coreType);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @SuppressWarnings("unchecked")
  @Override
  public void eSet(int featureID, Object newValue)
  {
    switch (featureID)
    {
      case DmlPackage.S__SRC:
        setSrc((String)newValue);
        return;
      case DmlPackage.S__SRCID:
        setSrcid((ID)newValue);
        return;
      case DmlPackage.S__CWD:
        setCwd((String)newValue);
        return;
      case DmlPackage.S__IFE:
        setIfe((E)newValue);
        return;
      case DmlPackage.S__IS:
        setIs((BS)newValue);
        return;
      case DmlPackage.S__ES:
        setEs((BS)newValue);
        return;
      case DmlPackage.S__FP:
        setFp((FP)newValue);
        return;
      case DmlPackage.S__P:
        setP((PARFORPARAMS)newValue);
        return;
      case DmlPackage.S__S:
        setS((BS)newValue);
        return;
      case DmlPackage.S__PF:
        setPf((FP)newValue);
        return;
      case DmlPackage.S__WE:
        setWe((E)newValue);
        return;
      case DmlPackage.S__DI:
        getDi().clear();
        getDi().addAll((Collection<? extends DI>)newValue);
        return;
      case DmlPackage.S__FC:
        setFc((FC)newValue);
        return;
      case DmlPackage.S__LHSDI:
        setLhsdi((DI)newValue);
        return;
      case DmlPackage.S__E:
        getE().clear();
        getE().addAll((Collection<? extends E>)newValue);
        return;
    }
    super.eSet(featureID, newValue);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void eUnset(int featureID)
  {
    switch (featureID)
    {
      case DmlPackage.S__SRC:
        setSrc(SRC_EDEFAULT);
        return;
      case DmlPackage.S__SRCID:
        setSrcid((ID)null);
        return;
      case DmlPackage.S__CWD:
        setCwd(CWD_EDEFAULT);
        return;
      case DmlPackage.S__IFE:
        setIfe((E)null);
        return;
      case DmlPackage.S__IS:
        setIs((BS)null);
        return;
      case DmlPackage.S__ES:
        setEs((BS)null);
        return;
      case DmlPackage.S__FP:
        setFp((FP)null);
        return;
      case DmlPackage.S__P:
        setP((PARFORPARAMS)null);
        return;
      case DmlPackage.S__S:
        setS((BS)null);
        return;
      case DmlPackage.S__PF:
        setPf((FP)null);
        return;
      case DmlPackage.S__WE:
        setWe((E)null);
        return;
      case DmlPackage.S__DI:
        getDi().clear();
        return;
      case DmlPackage.S__FC:
        setFc((FC)null);
        return;
      case DmlPackage.S__LHSDI:
        setLhsdi((DI)null);
        return;
      case DmlPackage.S__E:
        getE().clear();
        return;
    }
    super.eUnset(featureID);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public boolean eIsSet(int featureID)
  {
    switch (featureID)
    {
      case DmlPackage.S__SRC:
        return SRC_EDEFAULT == null ? src != null : !SRC_EDEFAULT.equals(src);
      case DmlPackage.S__SRCID:
        return srcid != null;
      case DmlPackage.S__CWD:
        return CWD_EDEFAULT == null ? cwd != null : !CWD_EDEFAULT.equals(cwd);
      case DmlPackage.S__IFE:
        return ife != null;
      case DmlPackage.S__IS:
        return is != null;
      case DmlPackage.S__ES:
        return es != null;
      case DmlPackage.S__FP:
        return fp != null;
      case DmlPackage.S__P:
        return p != null;
      case DmlPackage.S__S:
        return s != null;
      case DmlPackage.S__PF:
        return pf != null;
      case DmlPackage.S__WE:
        return we != null;
      case DmlPackage.S__DI:
        return di != null && !di.isEmpty();
      case DmlPackage.S__FC:
        return fc != null;
      case DmlPackage.S__LHSDI:
        return lhsdi != null;
      case DmlPackage.S__E:
        return e != null && !e.isEmpty();
    }
    return super.eIsSet(featureID);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public String toString()
  {
    if (eIsProxy()) return super.toString();

    StringBuffer result = new StringBuffer(super.toString());
    result.append(" (src: ");
    result.append(src);
    result.append(", cwd: ");
    result.append(cwd);
    result.append(')');
    return result.toString();
  }

} //SImpl
